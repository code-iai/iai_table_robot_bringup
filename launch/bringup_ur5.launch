<?xml version="1.0"?>
<!--
  Universal robot ur5 launch.  Loads ur5 robot description (see ur_common.launch
  for more info)

  Usage:
    ur5_bringup.launch robot_ip:=<value>
-->
<launch>
  
  <!-- robot_ip: IP-address of the robot's socket-messaging server -->
  <arg name="robot_ip" default="192.168.102.88"/>
  <arg name="limited" default="false"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="5.0"/>
  <arg name="prefix" default="" />
  <arg name="use_ros_control" default="False" />
  <!-- robot model -->
  <include file="$(find iai_table_robot_description)/launch/upload.launch">
    <!-- <arg name="limited" value="$(arg limited)"/> -->
  </include>

  <arg name="servoj_time" default="0.008" />
  <arg name="base_frame" default="$(arg prefix)base" />
  <arg name="tool_frame" default="$(arg prefix)tool0_controller" />
    
  <arg name="max_velocity" default="10.0"/> <!-- [rad/s] -->

  <!-- driver -->
  <node name="ur_driver" pkg="ur_modern_driver" type="ur_driver" output="screen">
  <!-- copy the specified IP address to be consistant with ROS-Industrial spec. -->
    <remap from="joint_states" to="arm/joint_states"/>    
    <param name="prefix" type="str" value="$(arg prefix)" />
    <param name="robot_ip_address" type="str" value="$(arg robot_ip)" />
    <param name="min_payload" type="double" value="$(arg min_payload)" />
    <param name="max_payload" type="double" value="$(arg max_payload)" />
    <param name="max_velocity" type="double" value="$(arg max_velocity)" />
    <param name="servoj_time" type="double" value="$(arg servoj_time)" />
    <param name="base_frame" type="str" value="$(arg base_frame)"/>
    <param name="use_ros_control" type="bool" value="$(arg use_ros_control)"/>
    <param name="tool_frame" type="str" value="$(arg tool_frame)"/>
  </node>

  <group if="$(arg use_ros_control)">
    <!-- Load controller settings -->
    <rosparam file="$(find iai_table_robot_bringup)/config/ur5_controllers.yaml" command="load"/>

    <!-- spawn controller manager -->
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="joint_state_controller force_torque_sensor_controller vel_based_pos_traj_controller --shutdown-timeout 0.5" />

    <!-- load other controller -->
    <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
      output="screen" args="load pos_based_pos_traj_controller" />
  </group>
  <group unless="$(arg use_ros_control)">
    <node name="fake_state_publisher" pkg="iai_table_robot_bringup" type="fake_state_publisher.py" output="screen"/>
  </group>

  <include file="$(find iai_kms_40_driver)/launch/iai_kms_40_driver.launch" >
    <arg name="ip" value="192.168.102.70" />
  </include>

  <include file="$(find iai_table_robot_bringup)/launch/ft_cleaner.launch" />

  <include file="$(find wsg_50_driver)/launch/wsg_50_tcp.launch" >
    <arg name="ip" value="192.168.102.63" />
  </include>

</launch>
